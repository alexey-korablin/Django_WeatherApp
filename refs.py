# СОЗДАНИЕ ПРОЕКТА
# В терминале: django-admin startproject <project_name>
# В результате создается папка с файлом manage.py и папкой с различными настройками
#
# Django проект состоит из множества приложений. Каждое приложение отвечает за отдельную функцию на сайте
# Поэтому для создания приложения нужно выполнить команду: python manage.py startapp <app_name>
# После этого в папке с проектом будет создана папка с именем <app_name>
#
# Каждое созданное приложение нужно регистрировать в файле <project_folder>\<settings_folder>\settings.py
# Заносить изменения нужно в массив INSTALLED_APPS
#
# После необходимо создать super_user'a - пользователя в админ-панели. Для этого нужно выполнить команду:
#   python manage.py migrate
# Затем можно создать супер-пользователя командой: python manage.py createsuperuser
# Далее нужно будет ввести имя пользователя, адрес электронной почты и пароль
# Чтобы проверить корректность создания пользователя нужно запустить сервер командой: python manage.py run server
# Далее нужно перейти по адресу http://127.0.0.1:8000/admin , ввести логин и пароль. Если приветственная страница и
#   админка отображаются, значит все работает как надо
#
# НАЧАЛО РАЗРАБОТКИ ПРОЕКТА
#
#                   $$$$$$1$$$$$$
# В файле <project_folder>\<settings_folder>\urls.py
# В нем из django.urls дополнительно импортируем include
# После чего в массиве urlpatterns можно добавить path
# include позволяет добавить массив url-адресов
#
#                   $$$$$$2$$$$$$
# Чтобы создать url-адреса приложения нужно создать файл: <project_folder>\<app_folder>\urls.py
# В этом файле нужно указать как и что нужно отобразить при переходе на тот или иной адрес. Указывается это в массиве
# urlpatterns
#
#                   $$$$$$3$$$$$$
# Чтобы создать шаблон нужно создать структуру и файлы: <project_folder>\<app_folder>\<templates_folder>\
#   <app_templates_folder>\index.html
# Сам шаблон является обычным валидным html файлом
# .